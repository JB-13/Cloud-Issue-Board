# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Clear Maven Cache
        run: mvn dependency:purge-local-repository

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Verfiy Build Output
        run: |
          echo "Checking backend artifacts"
          ls -l IssueBoardBackend/target/
          echo "Checking frontend artifacts"
          ls -l IssueBoardWebServer/target/
          

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          

      - name: Set Google Cloud Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT }}


      - name: Build and Push Backend Docker Image
        run: |
            docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/backend:${{ github.run_number }} IssueBoardBackend/.
            docker push gcr.io/${{ secrets.GCP_PROJECT }}/backend:${{ github.run_number }}


      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/frontend:${{ github.run_number }} IssueBoardWebServer/.
          docker push gcr.io/${{ secrets.GCP_PROJECT }}/frontend:${{ github.run_number }}


      - name: Deploy Backend to Google Cloud Run
        run: |
          gcloud run deploy backend \
            --image gcr.io/${{ secrets.GCP_PROJECT }}/backend:${{ github.run_number }} \
            --platform managed \
            --region europe-west1 \
            --allow-unauthenticated


      - name: Deploy Frontend to Google Cloud Run
        run: |
          gcloud run deploy frontend \
            --image gcr.io/${{ secrets.GCP_PROJECT }}/frontend:${{ github.run_number }} \
            --platform managed \
            --region europe-west1 \
            --allow-unauthenticated


      - name: Start Compose
        run: docker compose up --build -d

      - name: Health check
        run: |
          sleep 15 
          curl -f http://localhost:8080/cib.html || (echo "Frontend failed to start" && exit 1)
          # curl -f http://localhost:8081/health || (echo "Backend failed to start" && exit 1)

      - name: Stop Compose
        run: docker compose down